@page "/login"
@layout LoginLayout
@inject TeamTaskTracker.UI.Services.AuthService Auth
@inject NavigationManager Navigation

<div class="flex items-center justify-center min-h-screen bg-gray-100">
    <!-- Card -->
    <div class="bg-white shadow-lg rounded-xl w-full max-w-md p-8">
        <!-- Card Header -->
        <h2 class="text-3xl font-bold text-center text-gray-800 mb-6">Team Tracker Login</h2>

        <!-- Error Message -->
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="bg-red-100 text-red-700 p-3 rounded mb-4 text-center">@errorMessage</div>
        }

        <!-- Form -->
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <!-- Email -->
            <div class="mb-4">
                <label class="block text-gray-700 mb-2 font-medium">Email</label>
                <InputText 
                    @bind-Value="loginModel.Email"
                    type="email"
                    placeholder="Enter your email"
                    class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-400 focus:outline-none" />
            </div>

            <!-- Password -->
            <div class="mb-6">
                <label class="block text-gray-700 mb-2 font-medium">Password</label>
                <InputText 
                    @bind-Value="loginModel.Password"
                    type="password"
                    placeholder="Enter your password"
                    class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-400 focus:outline-none" />
            </div>

            <!-- Submit Button -->
            <button type="submit" 
                class="w-full bg-blue-600 text-white py-2 rounded-lg font-semibold hover:bg-blue-700 transition-colors">
                Login
            </button>
        </EditForm>

        <!-- Footer -->
        <div class="mt-4 text-center text-gray-500 text-sm">
            Don't have an account? 
            <a href="/register" class="text-blue-600 hover:underline">Register</a>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        errorMessage = null;
        bool success = await Auth.LoginAsync(loginModel.Email, loginModel.Password);
        if (success)
            Navigation.NavigateTo("/");
        else
            errorMessage = "Invalid email or password.";
    }

    class LoginModel
    {
        public string Email { get; set; } = null!;
        public string Password { get; set; } = null!;
    }
}
